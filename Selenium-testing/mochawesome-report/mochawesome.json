{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-22T12:01:05.055Z",
    "end": "2025-03-22T12:01:15.377Z",
    "duration": 10322,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a9226927-590c-4893-b331-8c4df54035cb",
      "title": "",
      "fullFile": "C:\\Users\\gerha\\WebstormProjects\\Testing\\Selenium-testing\\tests\\edge\\password.js",
      "file": "\\tests\\edge\\password.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b59a3118-edaf-4304-acc4-4d7a8d5084ee",
          "title": "Password check",
          "fullFile": "C:\\Users\\gerha\\WebstormProjects\\Testing\\Selenium-testing\\tests\\edge\\password.js",
          "file": "\\tests\\edge\\password.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Password check\"",
              "fullTitle": "Password check \"before all\" hook in \"Password check\"",
              "timedOut": false,
              "duration": 3470,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let options = new Options();\noptions.addArguments('--user-data-dir=C:\\\\Users\\\\gerha\\\\AppData\\\\Local\\\\Microsoft\\\\Edge\\\\User Data');\noptions.addArguments('--profile-directory=Default');\ndriver = await new Builder()\n    .forBrowser('MicrosoftEdge')\n    .setEdgeOptions(options)\n    .build();\npasswordPage = new PasswordPage(driver);",
              "err": {},
              "uuid": "789166eb-bfc2-48ab-aefc-1dc811f3972b",
              "parentUUID": "b59a3118-edaf-4304-acc4-4d7a8d5084ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Password check\"",
              "fullTitle": "Password check \"after all\" hook in \"Password check\"",
              "timedOut": false,
              "duration": 537,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "3ff1add0-80a8-4763-91a3-e5d07e8aeddc",
              "parentUUID": "b59a3118-edaf-4304-acc4-4d7a8d5084ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Password validator",
              "fullTitle": "Password check Password validator",
              "timedOut": false,
              "duration": 6304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const passwordKeys = Object.keys(passwords);\nawait driver.get('https://practice.expandtesting.com/secure-password-checker');\nfor (let i = 0; i < passwordKeys.length; i++) {\n    const key = passwordKeys[i];\n    const { value, validatorsActive, validatorsNonActive } = passwords[key];\n    await passwordPage.passwordField.clear();\n    await passwordPage.passwordField.sendKeys(value);\n    for (let j = 0; j < validatorsActive.length; j++) {\n        const validator = await passwordPage[validatorsActive[j]].isDisplayed();\n        if (!validator) {\n            throw new Error(`${validatorsActive[j]} is not visible when it should be`);\n        }\n    }\n    for (let j = 0; j < validatorsNonActive.length; j++) {\n        const validator = await passwordPage[validatorsNonActive[j]].isDisplayed();\n        if (validator) {\n            throw new Error(`${validatorsNonActive[j]} is visible when it should not be`);\n        }\n    }\n}",
              "err": {},
              "uuid": "0d086051-8725-492d-85e8-b2b3d5d8ff67",
              "parentUUID": "b59a3118-edaf-4304-acc4-4d7a8d5084ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d086051-8725-492d-85e8-b2b3d5d8ff67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6304,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}